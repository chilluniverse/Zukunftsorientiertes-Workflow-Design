/*
 * -------------------------------------------------
 *  SteadyFlow Nextflow RNA-seq config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

// Global default params, used in configs
params
{

  version = "1.0" // Pipeline version
  //container = 'skptic/steadyflow:latest' // Container slug. Stable releases should specify release tag!
  //nf_required_version = '0.30.0' // Minimum version of nextflow required
  
    
// Run arguments
  align = false
  DEG = false
  dmel = false
  dmau = false
}

profiles 
{
  hetzelp
  {
    includeConfig 'conf/hetzelp.config'
  }
}

manifest
{
  homePage = 'https://gitlab2.cip.ifi.lmu.de/hetzelp/zukunftsorientiertes-workflow-design'
  description = 'Zukunfsorientiertes Workflow-Design f√ºr reproduzierbare ATACseq- und RNAseq- Analysen'
  mainScript = 'main.nf'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type)
{
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}